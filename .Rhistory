)
icu_gender <- table(data_clean$CLASSIFIED, data_clean$SEX)
saveRDS(
icu_gender,
file = here::here("subproject1/output/descriptive_output", "icu_gender.rds")
)
readRDS(
file = here::here("subproject1/output/descriptive_output/table_one.rds")
)
readRDS(
file = here::here("subproject1/output/descriptive_output/icu_gender.rds")
)
data_long <- data_clean %>%
select(SEX, AGE, PNEUMONIA, DIABETES, COPD, ASTHMA, INMSUPR, HIPERTENSION,
CARDIOVASCULAR, RENAL_CHRONIC, OTHER_DISEASE, OBESITY) %>%
pivot_longer(cols = -c(SEX, AGE), names_to = "Disease", values_to = "Status") %>%
filter(Status == 1) %>%
select(-Status)
gplot(data_long, aes(x = SEX, y = AGE, fill = Disease)) +
geom_bar(stat = "identity", position = "stack", width = 0.7, color = "black") +
labs(title = "Age Distribution by Gender and Disease",
x = "Gender", y = "Age", fill = "Disease") +
scale_fill_brewer(palette = "Set3") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10))
gplot(data_long, aes(x = SEX, y = STatus, fill = Disease)) +
geom_bar(stat = "identity", position = "stack", width = 0.7, color = "black") +
labs(title ="Gender and Disease",
x = "Gender", y = "Status", fill = "Disease") +
scale_fill_brewer(palette = "Set3") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10))
ggplot(data_long, aes(x = SEX, y = Status, fill = Disease)) +
geom_bar(stat = "identity", position = "stack", width = 0.7, color = "black") +
labs(title ="Gender and Disease",
x = "Gender", y = "Status", fill = "Disease") +
scale_fill_brewer(palette = "Set3") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10))
ggsave(
plot2 = ggplot(table_one, aes(x = SEX, y = Count, fill = Disease)) +
geom_bar(stat = "identity", position = "stack", width = 0.7, color = "black") +
labs(title = "Disease Distribution by Gender",
x = "Gender", y = "Count", fill = "Disease") +
scale_fill_brewer(palette = "Set3") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10)),
device = "png",
file.path(here::here("subproject1/output/descriptive_output", "stacked_bar_chart.png")),
width = 10,
height = 6
)
ggsave(
plot2 = ggplot(table_one, aes(x = SEX, y = Count, fill = Disease)) +
geom_bar(stat = "identity", position = "stack", width = 0.7, color = "black") +
labs(title = "Disease Distribution by Gender",
x = "Gender", y = "Count", fill = "Disease") +
scale_fill_brewer(palette = "Set3") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10)),
device = "png",
file.path(here::here("subproject1/output/descriptive_output", "stacked_bar_chart.png")),
width = 10,
height = 6
)
readRDS(
file = here::here("subproject1/output/descriptive_output/table_one.rds")
)
readRDS(
file = here::here("subproject1/output/descriptive_output/icu_gender.rds")
)
here::i_am(
"subproject1/code/data_clean.R"
)
pacman::p_load(
here
)
here::i_am(
"covid_sub.csv"
)
library(dplyr)
absolute_path<-here::here("covid_sub.csv")
data<-read.csv(absolute_path,header = TRUE)
data_clean<- data %>%
mutate(CLASSIFIED =  ifelse(data$CLASIFFICATION_FINAL >= 1 &
data$CLASIFFICATION_FINAL <=3,
"Positive", "Inconclusive")
)
saveRDS(
data_clean,"data_clean.rds"
)
here::i_am(
"subproject1/code/data_clean.R"
)
here::i_am(
"subproject1/code/descriptive_analysis.R"
)
#Please fill this section with data cleaning
library(dplyr)
library(tidyr)
library(ggplot2)
# Create the contingency table
table_one <- data_clean %>%
select(SEX, PNEUMONIA, DIABETES, COPD, ASTHMA, INMSUPR, HIPERTENSION,
CARDIOVASCULAR, RENAL_CHRONIC, OTHER_DISEASE, OBESITY) %>%
pivot_longer(cols = -SEX, names_to = "Disease", values_to = "Present") %>%
group_by(SEX, Disease, Present) %>%
summarise(Count = n()) %>%
ungroup()
saveRDS(
table_one,
file = here::here("subproject1/output/descriptive_output", "table_one.rds")
)
#Contingency Table 2
icu_gender <- table(data_clean$CLASSIFIED, data_clean$SEX)
saveRDS(
icu_gender,
file = here::here("subproject1/output/descriptive_output", "icu_gender.rds")
)
# Create the bar plot and save it
ggsave(
plot = ggplot(table_one, aes(x = Disease, y = Count, fill = SEX)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Disease", y = "Count", fill = "Gender") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)),
device = "png",
file.path(here::here("subproject1/output/descriptive_output", "bar_plot.png")),
width = 10,
height = 6
)
here::i_am(
"subproject1/report.Rmd"
)
readRDS(
file = here::here("subproject1/output/descriptive_output/table_one.rds")
)
readRDS(
file = here::here("subproject1/output/descriptive_output/icu_gender.rds")
)
#| fig.align = "center",
#| out.width = "600px"
knitr::include_graphics(
here::here("subproject1/output/descriptive_output/bar_plot.png")
)
here::i_am(
"subproject1/code/data_clean.R"
)
here::i_am(
"subproject1/code/descriptive_analysis.R"
)
#Please fill this section with data cleaning
library(dplyr)
library(tidyr)
library(ggplot2)
# Create the contingency table
table_one <- data_clean %>%
select(SEX, PNEUMONIA, DIABETES, COPD, ASTHMA, INMSUPR, HIPERTENSION,
CARDIOVASCULAR, RENAL_CHRONIC, OTHER_DISEASE, OBESITY) %>%
pivot_longer(cols = -SEX, names_to = "Disease", values_to = "Present") %>%
group_by(SEX, Disease, Present) %>%
summarise(Count = n()) %>%
ungroup()
saveRDS(
table_one,
file = here::here("subproject1/output/descriptive_output", "table_one.rds")
)
#Contingency Table 2
icu_gender <- table(data_clean$CLASSIFIED, data_clean$SEX)
saveRDS(
icu_gender,
file = here::here("subproject1/output/descriptive_output", "icu_gender.rds")
)
# Create the bar plot and save it
ggsave(
plot = ggplot(table_one, aes(x = Disease, y = Count, fill = SEX)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Disease", y = "Count", fill = "Gender") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)),
device = "png",
file.path(here::here("subproject1/output/descriptive_output", "bar_plot.png")),
width = 10,
height = 6
)
here::i_am(
"subproject1/report.Rmd"
)
readRDS(
file = here::here("subproject1/output/descriptive_output/table_one.rds")
)
readRDS(
file = here::here("subproject1/output/descriptive_output/icu_gender.rds")
)
readRDS(
file = here::here("subproject1/output/descriptive_output/table_one.rds")
)
readRDS(
file = here::here("subproject1/output/descriptive_output/icu_gender.rds")
)
here::i_am(
"subproject1/report.Rmd"
)
readRDS(
here::here("subproject1/output/descriptive_output/bar_plot.png")
)
table_one <- data_clean %>%
select(SEX, PNEUMONIA, DIABETES, COPD, ASTHMA, INMSUPR, HIPERTENSION,
CARDIOVASCULAR, RENAL_CHRONIC, OTHER_DISEASE, OBESITY) %>%
pivot_longer(cols = -SEX, names_to = "Disease", values_to = "Present") %>%
group_by(SEX, Disease, Present) %>%
summarise(Count = n()) %>%
ungroup()
saveRDS(
table_one,
file = here::here("subproject1/output/descriptive_output", "table_one.rds")
)
saveRDS(
table_one,
file = here::here("subproject1/output/descriptive_output", "table_one.rds")
)
setwd("~/Downloads/Midterm/ngunmen_Midterm_project")
saveRDS(
table_one,
file = here::here("subproject1/output/descriptive_output", "table_one.rds")
)
here::i_am(
"subproject1/code/descriptive_analysis.R"
)
library(dplyr)
library(tidyr)
library(ggplot2)
table_one <- data_clean %>%
select(SEX, PNEUMONIA, DIABETES, COPD, ASTHMA, INMSUPR, HIPERTENSION,
CARDIOVASCULAR, RENAL_CHRONIC, OTHER_DISEASE, OBESITY) %>%
pivot_longer(cols = -SEX, names_to = "Disease", values_to = "Present") %>%
group_by(SEX, Disease, Present) %>%
summarise(Count = n()) %>%
ungroup()
saveRDS(
table_one,
file = here::here("subproject1/output/descriptive_output", "table_one.rds")
)
icu_gender <- table(data_clean$CLASSIFIED, data_clean$SEX)
saveRDS(
icu_gender,
file = here::here("subproject1/output/descriptive_output", "icu_gender.rds")
)
ggsave(
plot = ggplot(table_one, aes(x = Disease, y = Count, fill = SEX)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Disease", y = "Count", fill = "Gender") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)),
device = "png",
file.path(here::here("subproject1/output/descriptive_output", "bar_plot.png")),
width = 10,
height = 6
)
#| fig.align = "center",
#| out.width = "600px"
knitr::include_graphics(
here::here("subproject1/output/descriptive_output/scatterplot.png")
)
readRDS(
file = here::here("subproject1/output/descriptive_output/table_one.rds")
)
readRDS(
file = here::here("subproject1/output/descriptive_output/icu_gender.rds")
)
#| fig.align = "center",
#| out.width = "600px"
knitr::include_graphics(
here::here("subproject1/output/descriptive_output/scatterplot.png")
)
#| fig.align = "center",
#| out.width = "600px"
knitr::include_graphics(
here::here("subproject1/output/descriptive_output/bar_plot.png")
)
pacman::p_load(
here
)
here::i_am(
"covid_sub.csv"
)
library(dplyr)
absolute_path<-here::here("covid_sub.csv")
data<-read.csv(absolute_path,header = TRUE)
data_clean<- data %>%
mutate(CLASSIFIED =  ifelse(data$CLASIFFICATION_FINAL >= 1 &
data$CLASIFFICATION_FINAL <=3,
"Positive", "Inconclusive")
)
saveRDS(
data_clean,"data_clean.rds"
)
here::i_am(
"subproject1/code/descriptive_analysis.R"
)
#Please fill this section with data cleaning
library(dplyr)
library(tidyr)
library(ggplot2)
# Create the contingency table
table_one <- data_clean %>%
select(SEX, PNEUMONIA, DIABETES, COPD, ASTHMA, INMSUPR, HIPERTENSION,
CARDIOVASCULAR, RENAL_CHRONIC, OTHER_DISEASE, OBESITY) %>%
pivot_longer(cols = -SEX, names_to = "Disease", values_to = "Present") %>%
group_by(SEX, Disease, Present) %>%
summarise(Count = n()) %>%
ungroup()
saveRDS(
table_one,
file = here::here("subproject1/output/descriptive_output", "table_one.rds")
)
#Contingency Table 2
icu_gender <- table(data_clean$CLASSIFIED, data_clean$SEX)
saveRDS(
icu_gender,
file = here::here("subproject1/output/descriptive_output", "icu_gender.rds")
)
# Create the bar plot and save it
ggsave(
plot = ggplot(table_one, aes(x = Disease, y = Count, fill = SEX)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Disease", y = "Count", fill = "Gender") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)),
device = "png",
file.path(here::here("subproject1/output/descriptive_output", "bar_plot.png")),
width = 10,
height = 6
)
here::i_am(
"subproject1/report.Rmd"
)
readRDS(
file = here::here("subproject1/output/descriptive_output/table_one.rds")
)
readRDS(
file = here::here("subproject1/output/descriptive_output/icu_gender.rds")
)
#| fig.align = "center",
#| out.width = "600px"
knitr::include_graphics(
here::here("subproject1/output/descriptive_output/bar_plot.png")
)
data_clean <- readRDS("H:/史祎苇/研究生课程/24Spring/DATA 550/Midterm Project/midterm_project_github/DATA550_Midterm_project/data/data_clean.rds")
View(data_clean)
View(data_clean)
pacman::p_load(
dplyr,
caret,
ggplot2,
lattice,
knitr,
broom
)
here::i_am(
"subproject2/code/model.R"
)
absolute_path <- here::here("data/covid_sub.csv")
data<-read.csv(absolute_path,header = TRUE)
data_clean <- data %>%
filter(!is.na(ICU))
data_clean <- data_clean %>%
mutate(CLASSIFIED =  ifelse(data_clean$CLASIFFICATION_FINAL >= 1 &
data_clean$CLASIFFICATION_FINAL <=3,
"Positive", "Inconclusive")
)
# encode categorical varibles
columns_to_encode <- names(data_clean)[sapply(data_clean, function(column) {
all(c('Yes', 'No') %in% unique(column))
})]
data_clean <- data_clean %>%
mutate(across(all_of(columns_to_encode), ~if_else(.x == 'Yes', 1, 0)))
data_clean <- data_clean %>%
mutate(SEX = recode(SEX, 'female' = 1, 'male' = 0))
data_clean <- data_clean %>%
mutate(CLASSIFIED = recode(CLASSIFIED, 'Positive' = 1, 'Inconclusive' = 0))
# add a new variable DIED to indicate if the patient died
data_clean <- data_clean %>%
mutate(DIED = if_else(!is.na(DATE_DIED), 1, 0))
# logistic regression
# PREGNANT PNEUMONIA COPD DIABETES CARDIOVASCULAR RENAL_CHRONIC SEX AGE CLASSIFIED DIED as predictive variables
new_df <- data_clean %>%
select(PREGNANT, PNEUMONIA, COPD, DIABETES, CARDIOVASCULAR, RENAL_CHRONIC,SEX, AGE, CLASSIFIED, DIED, ICU)
new_df<-na.omit(new_df)
model <- glm(ICU ~ PREGNANT + PNEUMONIA + COPD + DIABETES + CARDIOVASCULAR + RENAL_CHRONIC + SEX + AGE + DIED,
data = new_df,
family = binomial)
# Model Summary
tidy_model <- tidy(model)
model_table <- kable(tidy_model, caption = "Table. Model Summary", digits = 4)
saveRDS(
model_table,
file = here::here("subproject2/output/model/model_table.rds")
# Model Diagnostics
qqplot_path <- here::here("subproject2/output/model", "QQplot.png")
# Model Diagnostics
qqplot_path <- here::here("subproject2/output/model/QQplot.png")
png(qqplot_path, width = 1600, height = 1200)
par(mfrow = c(2, 2))
plot(model)
dev.off()
# Making Predictions
new_df$predicted_probabilities <- predict(model, type = "response")
new_df$predicted_ICU_class <- ifelse(new_df$predicted_probabilities > 0.5, 1, 0)
# Confusion Matrix
confusion_matrix <- table(Predicted = new_df$predicted_ICU_class, Actual = new_df$ICU)
confusion_matrix<-kable(confusion_matrix,caption = "Confusion matrix")
saveRDS(
confusion_matrix,
file = here::here("subproject2/output/model/confusion_matrix.rds")
)
# Upsample the minority class
df_minority_upsampled <- df_minority %>%
slice(rep(1:n(), each = ceiling(upsample_factor))) %>%
head(nrow(df_majority))  # Ensure equal size
# upsampling
# Split the dataset into majority and minority classes
df_majority <- new_df %>% filter(ICU == 0)
df_minority <- new_df %>% filter(ICU == 1)
# Calculate how many times the minority class needs to be replicated
upsample_factor <- nrow(df_majority) / nrow(df_minority)
# Upsample the minority class
df_minority_upsampled <- df_minority %>%
slice(rep(1:n(), each = ceiling(upsample_factor))) %>%
head(nrow(df_majority))  # Ensure equal size
# Combine the upsampled minority class with the original majority class
df_balanced <- bind_rows(df_majority, df_minority_upsampled)
# Shuffle the combined dataset to randomize the order of rows
set.seed(123)  # For reproducibility
df_balanced <- df_balanced[sample(nrow(df_balanced)), ]
# logistic regression
model_upsampled <- glm(ICU ~ PREGNANT + PNEUMONIA + COPD + DIABETES + CARDIOVASCULAR + RENAL_CHRONIC + SEX + AGE + CLASSIFIED + DIED,
data = df_balanced,
family = binomial)
# Model Summary
tidy_model <- tidy(model_upsampled)
model_upsampled_table <- kable(tidy_model, caption = "Table. Model_upsampled Summary", digits = 4)
saveRDS(
model_upsampled_table,
file = here::here("subproject2/output/model/model_upsampled_table.rds")
)
# Model Diagnostics
qqplot_path <- here::here("subproject2/output/model/model_upsampled.png")
png(qqplot_path, width = 1600, height = 1200)
par(mfrow = c(2, 2))
plot(model_upsampled)
dev.off()
# Predicting probabilities
df_balanced$predicted_probabilities <- predict(model_upsampled, type = "response")
# Binarizing predictions based on a 0.5 threshold
df_balanced$predicted_ICU_class <- ifelse(df_balanced$predicted_probabilities > 0.5, 1, 0)
# Creating a confusion matrix
confusion_matrix <- table(Predicted = df_balanced$predicted_ICU_class, Actual = df_balanced$ICU)
confusion_matrix_upsampled<-kable(confusion_matrix, caption = "Confusion matrix_upsampled")
saveRDS(
confusion_matrix_upsampled,
file = here::here("subproject2/output/model/confusion_matrix_upsampled.rds")
)
# Varible selection
# Null model with no predictors
null_model <- glm(ICU ~ 1,
data = df_balanced,
family = binomial)
stepwise_model <- step(null_model,
scope = list(lower = null_model, upper = model_upsampled),
direction = "both",
trace = FALSE) # Set trace=TRUE to see step-by-step details
summary(stepwise_model)
tidy_model <- tidy(stepwise_model)
stepwise_model_table <- kable(tidy_model, caption = "Table.Stepwise_model Summary", digits= 4)
saveRDS(
stepwise_model_table,
file = here::here("subproject2/output/model/stepwise_model_table.rds")
)
# Model Diagnostics
qqplot_path <- here::here("subproject2/output/model/stepwise_model.png")
png(qqplot_path, width = 1600, height = 1200)
par(mfrow = c(2, 2))
plot(stepwise_model)
dev.off()
# Predicting probabilities
df_balanced$predicted_probabilities_stepwise <- predict(stepwise_model, type = "response")
# Binarizing predictions based on a 0.5 threshold
df_balanced$predicted_ICU_class_stepwise <- ifelse(df_balanced$predicted_probabilities_stepwise > 0.5, 1, 0)
# Creating a confusion matrix
confusion_matrix <- table(Predicted = df_balanced$predicted_ICU_class_stepwise, Actual = df_balanced$ICU)
confusion_matrix_stepwise<-kable(confusion_matrix,caption = "Confusion matrix_stepwise")
# No Improvement
saveRDS(
confusion_matrix_stepwise,
file = here::here("subproject2/output/model/confusion_matrix_stepwise.rds")
)
